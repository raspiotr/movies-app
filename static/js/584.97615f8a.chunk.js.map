{"version":3,"file":"static/js/584.97615f8a.chunk.js","mappings":"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","sources":["webpack://movies-app/./src/components/TitlesList/TitlesList.module.css?5757","components/TitlesList/TitlesList.jsx","js/api.js","webpack://movies-app/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","webpack://movies-app/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ListItem\":\"TitlesList_ListItem__r0ATq\"};","import { useLocation, Link } from 'react-router-dom';\nimport css from './TitlesList.module.css';\nimport PropTypes from 'prop-types';\n\nexport const TitlesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li className={css.ListItem} key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nTitlesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'bbc7a6a5746daf74b8073dd6ff8b49f7';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nconst fetchSearchMovies = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nconst fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport {\n  fetchTrending,\n  fetchSearchMovies,\n  fetchMovieDetails,\n  fetchMovieActors,\n  fetchMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__dksRa\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__7AAWA\",\"SearchFormInput\":\"Searchbar_SearchFormInput__FT6Bx\"};","import { useState } from 'react';\nimport css from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = props => {\n  const { onSubmit } = props;\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <header className={css.Searchbar}>\n      <form className={css.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={css.SearchFormButton}>\n          <span className=\"SearchFormButtonLabel\"></span>\n        </button>\n\n        <input\n          className={css.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"TitlesBox\":\"Movies_TitlesBox__kq8mj\"};","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Searchbar } from '../../components/Searchbar/Searchbar';\nimport { TitlesList } from '../../components/TitlesList/TitlesList';\nimport { fetchSearchMovies } from 'js/api';\nimport Notiflix from 'notiflix';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryFromURL = searchParams.get('query');\n\n  const [query, setQuery] = useState(queryFromURL || '');\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    async function loadSearchMovies() {\n      try {\n        setIsLoading(true);\n        const response = await fetchSearchMovies(query);\n        if (response.length === 0) {\n          Notiflix.Notify.warning(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n          return;\n        }\n        setMovies(response);\n      } catch (error) {\n        Notiflix.Notify.failure(\n          'Ooops... Something went wrong! Please, try again.'\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    loadSearchMovies();\n  }, [query]);\n\n  const handleSearch = myQuery => {\n    setQuery(myQuery);\n    myQuery !== '' ? setSearchParams({ query: myQuery }) : setSearchParams({});\n    setMovies([]);\n  };\n\n  return (\n    <main>\n      <Searchbar onSubmit={handleSearch} />\n      {isLoading && <Loader />}\n      {movies.length !== 0 && (\n        <div className={css.TitlesBox}>\n          <TitlesList movies={movies} />\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["TitlesList","_ref","movies","location","useLocation","_jsx","children","map","movie","className","css","Link","to","concat","id","state","from","title","API_KEY","axios","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieActors","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","Searchbar","props","onSubmit","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","event","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","target","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","queryFromURL","get","_useState5","_useState6","useEffect","_loadSearchMovies","length","Notiflix","t0","finish","loadSearchMovies","myQuery","Loader"],"sourceRoot":""}